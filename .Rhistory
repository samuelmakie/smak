end_position <- gregexpr(" ", string)[[1]][n_words] - 1
string <- substring(string, 0, last_character)
string
string <- substring(string, 0, end_position)
string
end_position <- gregexpr(" ", string)[[1]][n_words] - 1
string <- substring(string, 0, end_position)
string
string <- "Hello I am trying to improve my function"
n_words <- 5
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
end_position <- gregexpr(" ", string)[[1]][n_words] - 1
end_position
string <- substring(string, 0, end_position)
string
string <- ifelse(string != string_original, paste0(string, string_end), string)
string_end = "..."
string <- ifelse(string != string_original, paste0(string, string_end), string)
string
string <- "Hello I am"
n_words <- 5
string_end = "..."
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x[x <= 15]) == 0, 15, max(x[x <= 15]) - 1)})
end_position
sapply(gregexpr(" ", string), FUN = function(x){max(x[x <= 15]) - 1})
sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x[x <= 15]) == 0, 15, max(x[x <= 15]) - 1)})
sapply(gregexpr(" ", string), FUN = function(x){max(x[x <= 15]) - 1})
gregexpr(" ", string)
x <- gregexpr(" ", string)
length(x[x <= 15])
x <- gregexpr(" ", string)[[1]]
length(x[x <= 15])
x
x[x <= 15]
length(x[x <= 15])
string <- "Hello"
string <- "Psychological"
sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x[x <= 8]) == 0, 8, max(x[x <= 8]) - 1)})
string
sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x[x <= 8]) == 0, 8, max(x[x <= 8]) - 1)})
x <- gregexpr(" ", string)[[1]]
length(x[x <= 15])
string <- "Psychological"
string <- paste0(gsub(" {2,}", " ", string), " ")
string_original <- string
sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x[x <= 8]) == 0, 8, max(x[x <= 8]) - 1)})
max(x[x <= 15]) - 1
sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x[x <= 15]) == 0, 15, max(x[x <= 15]) - 1)})
sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x[x <= 15]) == 0, 15, max(x[x <= 15]) - 1)})
gregexpr(" ", string)
sapply(gregexpr(" ", string), FUN = function(x){length(x)})
string <- c("Psychological", "Hello I am trying to improve my function")
n_words <- 5
string_end = "..."
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
sapply(gregexpr(" ", string), FUN = function(x){length(x)})
gregexpr(" ", string)
sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < n_words, max(x),x[n_words])})
gregexpr(" ", string)
sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < n_words, max(x) - 1, x[n_words] - 1)})
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < n_words, max(x) - 1, x[n_words] - 1)})
end_position
string <- substring(string, 0, end_position)
string
string <- c("Psychological", "Hello I am trying to improve my function", "")
n_words <- 5
string_end = "..."
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < n_words, max(x) - 1, x[n_words] - 1)})
string <- substring(string, 0, end_position)
string
cut_sentence <- function(string, max_nchar = NULL, max_nwords = NULL, word_separator = " ", string_end = "..."){
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
if(!is.null(max_nchar) && !is.null(max_nwords)){
stop("Sentences cannot be cut by both max_nhar and max_nwords at the same time. Use one or the other.")
}
if(!is.null(max_nchar)){
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
end_position <- ifelse(end_position < 0, max_nchar, end_position)
}
if(!is.null(max_nwords)){
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < max_nwords, max(x) - 1, x[max_nwords] - 1)})
}
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original, paste0(string, string_end), string)
return(string)
}
cut_words_by_nchar("hello I am Sam, Nice to meet you", max_nchar = 15)
cut_words_by_nchar("hello I am Sam, Nice to meet you", max_nwords = 2)
cut_sentence("hello I am Sam, Nice to meet you", max_nwords = 2)
cut_sentence("hello I am Sam, Nice to meet you", max_nwords = 2, max_nchar = 1)
cut_sentence("hello I am Sam, Nice to meet you", max_nwords = 20)
cut_sentence("hello I am Sam, Nice to meet you", max_nwords = 1)
cut_sentence("hello I am Sam, Nice to meet you", max_nwords = 0)
cut_sentence("hello I am Sam", max_nwords = 100)
cut_sentence("", max_nwords = 100)
cut_sentence("Hello", max_nchar  = 0)
string <- "hello"
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
max_nchar <- 0
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
word_separator <- " "
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
end_position
end_position <- ifelse(end_position < 0, max_nchar, end_position)
end_position
max_nwords <- 0
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < max_nwords, max(x) - 1, x[max_nwords] - 1)})
end_position
max_nwords
gregexpr(" ", string)
string <- "hello"
max_nwords <- 0
string_end <- "..."
word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < n_words, max(x) - 1, x[n_words] - 1)})
end_position
n_words <- 5
string <- c("Psychological", "Hello I am trying to improve my function", "")
n_words <- 5
string_end = "..."
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < n_words, max(x) - 1, x[n_words] - 1)})
end_position
n_words <- 0
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < n_words, max(x) - 1, x[n_words] - 1)})
end_position
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < max_nwords | max_nwords <= 0, max(x) - 1, x[max_nwords] - 1)})
end_position
max_nwords <- 0
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < max_nwords | max_nwords <= 0, max(x) - 1, x[max_nwords] - 1)})
end_position
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < max_nwords & max_nwords <= 0, max(x) - 1, x[max_nwords] - 1)})
end_position
gregexpr(" ", string)
max_nwords
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) < max_nwords | max_nwords == 0, x[length(x)] - 1, x[max_nwords] - 1)})
end_position
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(x) >= n_words, x[n_words] - 1, max(x) - 1)})
end_position
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){c(0, x)})
sapply(gregexpr(" ", string), FUN = function(x){c(0, x)})
end_position <- sapply(gregexpr(" ", string), FUN = function(x){c(0, x)[n_words + 1]})
end_position
gregexpr(" ", string)
n_words
n_words + 1
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){y <- c(0, x); ifelse(length(x) >= max_nwords, x[max_nwords] - 1, NA)})
end_position
end_position <- sapply(gregexpr(" ", string), FUN = function(x){y <- c(0, x); ifelse(length(x) >= max_nwords + 1, x[max_nwords] - 1, NA)})
end_position
max_nwords
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){y <- c(0, x); ifelse(length(y) >= max_nwords + 1, y[max_nwords] - 1, NA)})
end_position
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, c(0, x)[max_nwords] - 1, NA)})
end_position
gregexpr(" ", string)
max_nwords
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, c(0, x)[max_nwords + 1] - 1, NA)})
end_position
max_nwords
gregexpr(" ", string)
max_nwords
gregexpr(" ", string)
gregexpr(" ", string)[[1]]
gregexpr(" ", string)[[2]]
c(0, gregexpr(" ", string)[[2]])
c(0, gregexpr(" ", string)[[2]]) |> length()
length(c(0, gregexpr(" ", string)[[2]]))
length(c(0, gregexpr(" ", string)[[2]])) >= max_nwords + 1
c(0, gregexpr(" ", string)[[2]])
c(0, gregexpr(" ", string)[[2]])[max_nwords + 1]
max_nwords
max_nwords + 1
c(0, gregexpr(" ", string)[[2]])
gregexpr(" ", string)[[2]][max_nwords + 1]
gregexpr(" ", string)[[2]][max_nwords + 1]
gregexpr(" ", string)[[2]][max_nwords + 1]
gregexpr(" ", string)[[2]]
c(0, gregexpr(" ", string)[[2]])[max_nwords + 1]
c(0, gregexpr(" ", string)[[2]])[max_nwords + 2]
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, c(0, x)[max_nwords + 2] - 1, NA)})
end_position
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){c(0, gregexpr(" ", string)[[2]])[max_nwords + 2]})
end_position <- sapply(gregexpr(" ", string), FUN = function(x){c(0, x)[max_nwords + 2]})
end_position
end_position <- sapply(gregexpr(" ", string), FUN = function(x){c(0, x)[max_nwords + 2] - 1})
end_position
gregexpr(" ", string)
c(0, gregexpr(" ", string)[[2]])[max_nwords + 2]
c(0, gregexpr(" ", string)[[1]])[max_nwords + 2]
max_nwords
c(0, gregexpr(" ", string)[[1]])[1]
c(0, gregexpr(" ", string)[[1]])[0 + 1]
c(0, gregexpr(" ", string)[[1]])[1 + 1]
c(0, gregexpr(" ", string)[[1]])[max_nwords + 1]
c(0, gregexpr(" ", string)[[2]])[max_nwords + 1]
c(0, gregexpr(" ", string)[[2]])
c(0, gregexpr(" ", string)[[2]])[max_nwords + 1] - 1
max(0, c(0, gregexpr(" ", string)[[2]])[max_nwords + 1] - 1)
max(0, c(0, gregexpr(" ", string)[[2]])[2 + 1] - 1)
gregexpr(" ", string)[[2]])
c(0, gregexpr(" ", string)[[2]])
max(0, c(0, gregexpr(" ", string)[[2]])[max_nwords + 1] - 1)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){max(0, c(0, x)[max_nwords + 1] - 1)})
end_position
cut_sentence <- function(string, max_nchar = NULL, max_nwords = NULL, word_separator = " ", string_end = "..."){
# string <- "hello"
# max_nwords <- 0
# string_end <- "..."
# word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
if(!is.null(max_nchar) && !is.null(max_nwords)){
stop("Sentences cannot be cut by both max_nhar and max_nwords at the same time. Use one or the other.")
}
if(!is.null(max_nchar)){
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
end_position <- ifelse(end_position < 0, max_nchar, end_position)
}
if(!is.null(max_nwords)){
end_position <- sapply(gregexpr(" ", string), FUN = function(x){max(0, c(0, x)[max_nwords + 1] - 1)})
}
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original, paste0(string, string_end), string)
return(string)
}
string <- c("Psychological", "Hello I am trying to improve my function", "")
cut_sentence(string = string)
cut_sentence <- function(string, max_nchar = NULL, max_nwords = NULL, word_separator = " ", string_end = "..."){
# string <- "hello"
# max_nwords <- 0
# string_end <- "..."
# word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
if(!is.null(max_nchar) && !is.null(max_nwords)){
stop("Sentences cannot be cut by both max_nhar and max_nwords at the same time. Use one or the other.")
}
if(!is.null(max_nchar)){
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
end_position <- ifelse(end_position < 0, max_nchar, end_position)
}
if(!is.null(max_nwords)){
end_position <- sapply(gregexpr(" ", string), FUN = function(x){max(0, c(0, x)[max_nwords + 1] - 1)})
}
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original, paste0(string, string_end), string)
return(string)
}
cut_sentence("Hello", max_nchar  = 0)
cut_sentence("Hello", max_nchar  = 10)
cut_sentence(string = string, max_nchar = 20)
cut_sentence(string = string)
cut_sentence <- function(string, max_nchar = NULL, max_nwords = NULL, word_separator = " ", string_end = "..."){
# string <- "hello"
# max_nwords <- 0
# string_end <- "..."
# word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
if(!is.null(max_nchar) & !is.null(max_nwords)){
stop("Sentences cannot be cut by both max_nhar and max_nwords at the same time. Use one or the other.")
}
if(!is.null(max_nchar)){
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
end_position <- ifelse(end_position < 0, max_nchar, end_position)
}
if(!is.null(max_nwords)){
end_position <- sapply(gregexpr(" ", string), FUN = function(x){max(0, c(0, x)[max_nwords + 1] - 1)})
}
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original, paste0(string, string_end), string)
return(string)
}
cut_sentence(string = string)
rm(max_nchar)
rm(max_nwords)
cut_sentence <- function(string, max_nchar = NULL, max_nwords = NULL, word_separator = " ", string_end = "..."){
# string <- "hello"
# max_nwords <- 0
# string_end <- "..."
# word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
if(!is.null(max_nchar) & !is.null(max_nwords)){
stop("Sentences cannot be cut by both max_nhar and max_nwords at the same time. Use one or the other.")
}
if(!is.null(max_nchar)){
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
end_position <- ifelse(end_position < 0, max_nchar, end_position)
}
if(!is.null(max_nwords)){
end_position <- sapply(gregexpr(" ", string), FUN = function(x){max(0, c(0, x)[max_nwords + 1] - 1)})
}
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original, paste0(string, string_end), string)
return(string)
}
cut_sentence(string = string)
string
cut_sentence <- function(string, max_nchar = NULL, max_nwords = NULL, word_separator = " ", string_end = "..."){
# string <- "hello"
# max_nwords <- 0
# string_end <- "..."
# word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
if(!is.null(max_nchar) && !is.null(max_nwords)){
stop("Sentences cannot be cut by both max_nhar and max_nwords at the same time. Use one or the other.")
}
if(!is.null(max_nchar)){
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
end_position <- ifelse(end_position < 0, max_nchar, end_position)
}
if(!is.null(max_nwords)){
end_position <- sapply(gregexpr(" ", string), FUN = function(x){max(0, c(0, x)[max_nwords + 1] - 1)})
}
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original, paste0(string, string_end), string)
return(string)
}
cut_sentence("Hello", max_nchar  = 10)
cut_sentence(string = string)
cut_sentence <- function(string, max_nchar = NULL, max_nwords = NULL, word_separator = " ", string_end = "..."){
# string <- "hello"
# max_nwords <- 0
# string_end <- "..."
# word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
if(!is.null(max_nchar) && !is.null(max_nwords)){
stop("Sentences cannot be cut by both max_nhar and max_nwords at the same time. Use one or the other.")
}
if(is.null(max_nchar) && is.null(max_nwords)){
stop("Either max_nchar or max_nwords is required")
}
if(!is.null(max_nchar)){
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
end_position <- ifelse(end_position < 0, max_nchar, end_position)
}
if(!is.null(max_nwords)){
end_position <- sapply(gregexpr(" ", string), FUN = function(x){max(0, c(0, x)[max_nwords + 1] - 1)})
}
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original, paste0(string, string_end), string)
return(string)
}
cut_sentence(string = string)
cut_sentence(string = string, max_nwords = 5)
cut_sentence(string = string, max_nwords = 0)
cut_sentence(string = string, max_nwords = 0)
string <- c("Psychological", "Hello I am trying to improve my function", "")
max_nwords <- 0
string_end <- "..."
max_nwords <- 0
string_end <- "..."
word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
if(!is.null(max_nchar) && !is.null(max_nwords)){
stop("Sentences cannot be cut by both max_nhar and max_nwords at the same time. Use one or the other.")
}
if(is.null(max_nchar) && is.null(max_nwords)){
stop("Either max_nchar or max_nwords is required")
}
if(!is.null(max_nchar)){
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
end_position <- ifelse(end_position < 0, max_nchar, end_position)
}
if(!is.null(max_nwords)){
end_position <- sapply(gregexpr(" ", string), FUN = function(x){max(0, c(0, x)[max_nwords + 1] - 1)})
}
end_position
string <- substring(string, 0, end_position)
string
string <- ifelse(string != string_original & max_nwords != 0, paste0(string, string_end), string)
string
string <- ifelse(string != string_original & (max_nwords != 0 | max_nchar != 0), paste0(string, string_end), string)
max_nchar <- NULL
string <- ifelse(string != string_original & (max_nwords != 0 | max_nchar != 0), paste0(string, string_end), string)
string
(max_nwords != 0 | max_nchar != 0)
string <- ifelse(string != string_original & max_nwords != 0, paste0(string, string_end), string)
string
string <- c("Psychological", "Hello I am trying to improve my function", "")
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original & max_nwords != 0, paste0(string, string_end), string)
string
string <- c("Psychological", "Hello I am trying to improve my function", "")
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original & (max_nwords != 0 | max_nchar != 0), paste0(string, string_end), string)
string
string <- c("Psychological", "Hello I am trying to improve my function", "")
string <- substring(string, 0, end_position)
string
max_nchar != 0
max_nwords != 0
(max_nwords != 0 | max_nchar != 0)
as.numeric(NULL)
string <- ifelse(string != string_original
, paste0(string, string_end), string)
string <- ifelse(string != string_original, paste0(string, string_end), string)
string
string <- c("Psychological", "Hello I am trying to improve my function", "")
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original, paste0(string, string_end), string)
string
max_nwords <- 2
string <- c("Psychological", "Hello I am trying to improve my function", "")
if(!is.null(max_nwords)){
end_position <- sapply(gregexpr(" ", string), FUN = function(x){max(0, c(0, x)[max_nwords + 1] - 1)})
}
string <- substring(string, 0, end_position)
string
end_position
gregexpr(" ", string)
string <- c("Psychological", "Hello I am trying to improve my function", "")
max_nchar <- NULL
max_nwords <- 2
string_end <- "..."
word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){max(0, c(0, x)[max_nwords + 1] - 1)})
end_position
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords, max(0, c(0, x)[max_nwords + 1] - 1), max(x))})
end_position
gregexpr(" ", string)
max_nwords
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, max(0, c(0, x)[max_nwords + 1] - 1), max(x))})
end_position
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, max(0, c(0, x)[max_nwords + 1] - 1), ifelse(max_nwords > 0, max(x), 0))})
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, max(0, c(0, x)[max_nwords + 1] - 1), ifelse(max_nwords > 0, max(x), 0))})
end_position
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, max(0, c(0, x)[max_nwords + 1] - 1))})
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, max(0, c(0, x)[max_nwords + 1] - 1), "HAHA"))})
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, max(0, c(0, x)[max_nwords + 1] - 1), "HAHA")})
end_position
max_nwords
gregexpr(" ", string)
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, max(0, c(0, x)[max_nwords + 1] - 1), ifelse(max_nwords == 0, 0, max(x)))})
end_position
cut_sentence <- function(string, max_nchar = NULL, max_nwords = NULL, word_separator = " ", string_end = "..."){
#string <- c("Psychological", "Hello I am trying to improve my function", "")
#max_nchar <- NULL
#max_nwords <- 2
#string_end <- "..."
#word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
if(!is.null(max_nchar) && !is.null(max_nwords)){
stop("Sentences cannot be cut by both max_nhar and max_nwords at the same time. Use one or the other.")
}
if(is.null(max_nchar) && is.null(max_nwords)){
stop("Either max_nchar or max_nwords is required")
}
if(!is.null(max_nchar)){
end_position <- sapply(gregexpr(word_separator, string), FUN = function(x){ifelse(length(x[x <= max_nchar]) == 0, max_nchar, max(x[x <= max_nchar]) - 1)})
end_position <- ifelse(end_position < 0, max_nchar, end_position)
}
if(!is.null(max_nwords)){
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, max(0, c(0, x)[max_nwords + 1] - 1), ifelse(max_nwords == 0, 0, max(x)))})
}
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original, paste0(string, string_end), string)
return(string)
}
cut_sentence("Hello", max_nchar  = 10)
string <- c("Psychological", "Hello I am trying to improve my function", "")
cut_sentence(string = string, max_nwords = 0)
cut_sentence(string = string, max_nwords = 5)
string <- c("Psychological", "Hello I am trying to improve my function", "")
string <- c("Psychological", "Hello I am trying to improve my function", "")
max_nchar <- NULL
max_nwords <- 2
string_end <- "..."
word_separator <- " "
string_original <- string
string <- paste0(gsub(" {2,}", " ", string), " ")
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, max(0, c(0, x)[max_nwords + 1] - 1), ifelse(max_nwords == 0, 0, max(x)))})
end_position
end_position <- sapply(gregexpr(" ", string), FUN = function(x){ifelse(length(c(0, x)) >= max_nwords + 1, max(0, c(0, x)[max_nwords + 1] - 1), ifelse(max_nwords == 0, 0, max(x) - 1))})
end_position
string <- substring(string, 0, end_position)
string <- ifelse(string != string_original, paste0(string, string_end), string)
string
